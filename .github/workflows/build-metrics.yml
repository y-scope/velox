# Copyright (c) Facebook, Inc. and its affiliates.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: Collect Build Metrics

on:
  pull_request:
      paths:
        - ".github/workflows/build-metrics.yml"
        - "scripts/ci/bm-report/**"

  workflow_dispatch:
    inputs:
      ref:
        description: "ref to check"
        required: true

permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.sha }}
  cancel-in-progress: "${{github.ref != 'refs/heads/presto-0.293-clp-connector'}}"

jobs:
  metrics:
    name: Linux ${{ matrix.link-type }} - ${{ matrix.type }} with adapters
    runs-on: ${{ matrix.runner }}
    container: ghcr.io/y-scope/clp/velox-dev:adapters
    strategy:
      fail-fast: false
      matrix:
        runner: ["16-core-ubuntu"]
        type: ["debug", "release"]
        link-type: ["shared", "static"]
    defaults:
      run:
        shell: bash
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ inputs.ref || github.sha }}

      - name: Fix git permissions
        # Usually actions/checkout does this but as we run in a container
        # it doesn't work
        run: git config --global --add safe.directory ${GITHUB_WORKSPACE}

      - name: Make  ${{ matrix.link-type }} - ${{ matrix.type }} Build
        env:
          MAKEFLAGS: 'MAX_HIGH_MEM_JOBS=8 MAX_LINK_JOBS=4'
        run: |
          EXTRA_CMAKE_FLAGS=(
            "-DVELOX_ENABLE_BENCHMARKS=ON"
            "-DVELOX_ENABLE_ARROW=ON"
            "-DVELOX_ENABLE_PARQUET=ON"
            "-DVELOX_ENABLE_HDFS=ON"
            "-DVELOX_ENABLE_S3=ON"
            "-DVELOX_ENABLE_GCS=ON"
            "-DVELOX_ENABLE_ABFS=ON"
            "-DVELOX_ENABLE_REMOTE_FUNCTIONS=ON"
            "-DVELOX_MONO_LIBRARY=ON"
            "-DVELOX_BUILD_SHARED=${{ matrix.link-type == 'shared' && 'ON' || 'OFF' }}"
          )

          echo "CMake Flags: ${EXTRA_CMAKE_FLAGS[*]}"
          make '${{ matrix.type }}' EXTRA_CMAKE_FLAGS="${EXTRA_CMAKE_FLAGS[*]}"

      - name: Log binary sizes
        run: |
          mkdir -p /tmp/metrics
          sizes_file=/tmp/metrics/object_sizes
          echo "sizes_file=$sizes_file" >> $GITHUB_ENV

          pushd '_build/${{ matrix.type }}'

          # . to also check in lib for mono build
          find . -type f \( -name 'libvelox*.so' -o -name 'libvelox*.a' \) -exec ls -l -BB {} \; |
            awk '{print $5, $9; total += $5} END {print total," total_lib_size"}' > $sizes_file

          find velox -type f -name '*.o' -exec ls -l -BB {} \;  |
            awk '{print $5, $9; total += $5} END {print total," total_obj_size"}' >> $sizes_file

          find velox -type f -name 'velox_*' -exec ls -l -BB {} \; |
            awk '{print $5, $9; total += $5} END {print total," total_exec_size"}' >> $sizes_file

          echo "::group::Size file for ${{ matrix.link-type }} - ${{ matrix.type }}"
          cat $sizes_file
          echo "::endgroup::"

      - uses: actions/upload-artifact@v4
        with:
          path: ${{ env.sizes_file }}
          name: "${{ matrix.type }}-${{ matrix.link-type }}-sizes"
