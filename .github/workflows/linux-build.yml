# Copyright (c) Facebook, Inc. and its affiliates.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
name: Linux Build using GCC
on:
  push:
    branches: [presto-0.293-clp-connector]
    paths:
      - "velox/**"
      - "!velox/docs/**"
      - "CMakeLists.txt"
      - "CMake/**"
      - "third_party/**"
      - "scripts/setup-ubuntu.sh"
      - "scripts/setup-common.sh"
      - "scripts/setup-versions.sh"
      - "scripts/setup-helper-functions.sh"
      - ".github/workflows/linux-build.yml"
      - ".github/workflows/linux-build-base.yml"
  pull_request:
    paths:
      - "velox/**"
      - "!velox/docs/**"
      - "CMakeLists.txt"
      - "CMake/**"
      - "third_party/**"
      - "scripts/setup-common.sh"
      - "scripts/setup-versions.sh"
      - "scripts/setup-ubuntu.sh"
      - "scripts/setup-helper-functions.sh"
      - ".github/workflows/linux-build.yml"
      - ".github/workflows/linux-build-base.yml"
permissions:
  contents: read
concurrency:
  group: ${{ github.workflow }}-${{ github.repository }}-${{ github.head_ref || github.sha }}
  cancel-in-progress: ${{github.ref != 'refs/heads/presto-0.293-clp-connector'}}
jobs:
  linux-gcc:
    name: Build with GCC
    runs-on: yscope-gh-runner
    env:
      CCACHE_DIR: "${{ github.workspace }}/ccache"
      USE_CLANG: "${{ 'false' }}"
    defaults:
      run:
        shell: bash
        working-directory: velox
    steps:
      - name: Node Setup and Cleanup
        working-directory: ${{ github.workspace }}
        run: |
          df -h
          rm -rf /usr/local/lib/android
          rm -rf /usr/share/dotnet
          rm -rf /usr/share/dotnet
          rm -rf /opt/ghc
          rm -rf /opt/hostedtoolcache/CodeQL
          rm -rf "/usr/local/share/boost"
          rm -rf "$AGENT_TOOLSDIRECTORY"
          docker image prune --all --force
          docker builder prune -a
          df -h
          whoami
          pwd
      - uses: actions/checkout@v4
        with:
          path: velox
      - name: Fetch the origin to get presto-0.293-clp-connector branch
        run: |
          git fetch
      - name: Get Ccache Stash
        continue-on-error: true
        uses: assignUser/stash/restore@v1
        with:
          path: '${{ env.CCACHE_DIR }}'
          key: ccache-ubuntu-release-default-${{ inputs.use-clang && 'clang' || 'gcc' }}
      - name: Ensure Stash Dirs Exists
        working-directory: ${{ github.workspace }}
        run: |
          mkdir -p '${{ env.CCACHE_DIR }}'
      - name: Install Core Dependencies
        run: |
          source scripts/setup-ubuntu.sh && install_apt_deps
      - name: CCache before
        run: |
          ccache -vs
      - name: Install Docs Dependencies
        run: |
          make python-venv
          ~/.local/bin/uv pip install -r scripts/docs-requirements.txt 
      - name: Build Docs
        run: |
          source .venv/bin/activate
          cd velox/docs
          make clean
          make html
      - name: Clear CCache Statistics
        run: |
          ccache -sz
      # - name: Check Headers
      #   run: |
      #     make header-fix
      #     if ! git diff --quiet; then
      #       diff=`git --no-pager diff`
      #       echo "Found missing License Header(s) in the following files:"
      #       git --no-pager diff --name-only
      #       echo "Check the Job summary for a copy-pasteable patch."
      #       echo "> [!IMPORTANT]" >> $GITHUB_STEP_SUMMARY
      #       echo "Found missing License Header(s)" >> $GITHUB_STEP_SUMMARY
      #       echo "> Please apply fix using:"  >> $GITHUB_STEP_SUMMARY
      #       echo "\`\`\`sh" >> $GITHUB_STEP_SUMMARY
      #       echo "patch -p1 <<EOF" >> $GITHUB_STEP_SUMMARY
      #       echo "$diff" >> $GITHUB_STEP_SUMMARY
      #       echo "EOF" >> $GITHUB_STEP_SUMMARY
      #       echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
      #       exit 1
      #     fi
      # - name: Check Format
      #   run: |
      #     make format-fix
      #     if ! git diff --quiet; then
      #       diff=`git --no-pager diff`
      #       echo "Found format issues in the following files:"
      #       git --no-pager diff --name-only
      #       echo "Check the Job summary for a copy-pasteable patch."
      #       echo "> [!IMPORTANT]" >> $GITHUB_STEP_SUMMARY
      #       echo "Found format issues" >> $GITHUB_STEP_SUMMARY
      #       echo "> Please apply fix using:"  >> $GITHUB_STEP_SUMMARY
      #       echo "\`\`\`sh" >> $GITHUB_STEP_SUMMARY
      #       echo "patch -p1 <<EOF" >> $GITHUB_STEP_SUMMARY
      #       echo "$diff" >> $GITHUB_STEP_SUMMARY
      #       echo "EOF" >> $GITHUB_STEP_SUMMARY
      #       echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
      #       exit 1
      #     fi
      - name: Build Artifact
        env:
          VELOX_DEPENDENCY_SOURCE: BUNDLED
          ICU_SOURCE: SYSTEM
          MAKEFLAGS: "NUM_THREADS=8 MAX_HIGH_MEM_JOBS=4 MAX_LINK_JOBS=3"
        run: |
          if [[ "${USE_CLANG}" = "true" ]]; then export CC=/usr/bin/clang-15; export CXX=/usr/bin/clang++-15; fi
          make release
      - name: CCache after
        run: |
          ccache -vs
      - uses: assignUser/stash/save@v1
        with:
          path: '${{ env.CCACHE_DIR }}'
          key: ccache-ubuntu-release-default-${{ inputs.use-clang && 'clang' || 'gcc' }}
      - name: Run Tests
        run: |
          cd _build/release && ctest -j 8 --output-on-failure --no-tests=error
